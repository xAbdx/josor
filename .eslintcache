[{"C:\\Users\\Admin\\Documents\\dd\\src\\screens\\question\\question.js":"1","C:\\Users\\Admin\\Documents\\dd\\src\\screens\\jobCard\\jobCard.style.js":"2","C:\\Users\\Admin\\Documents\\dd\\src\\screens\\jobs\\jobs.js":"3","C:\\Users\\Admin\\Documents\\dd\\src\\screens\\Home\\Home.js":"4","C:\\Users\\Admin\\Documents\\dd\\src\\screens\\signUp\\signUp.js":"5","C:\\Users\\Admin\\Documents\\dd\\src\\reportWebVitals.js":"6","C:\\Users\\Admin\\Documents\\dd\\src\\screens\\newJob\\newjob.style.js":"7","C:\\Users\\Admin\\Documents\\dd\\src\\screens\\HireMe\\HireMe.style.js":"8","C:\\Users\\Admin\\Documents\\dd\\src\\components\\footer\\footer.js":"9","C:\\Users\\Admin\\Documents\\dd\\src\\components\\jobPost\\JobSection.js":"10","C:\\Users\\Admin\\Documents\\dd\\src\\components\\header\\header.style.js":"11","C:\\Users\\Admin\\Documents\\dd\\src\\components\\newService\\newService.style.js":"12","C:\\Users\\Admin\\Documents\\dd\\src\\components\\header\\header.js":"13"},{"size":2777,"mtime":1617209890542,"results":"14","hashOfConfig":"15"},{"size":1813,"mtime":1615832276728,"results":"16","hashOfConfig":"15"},{"size":1378,"mtime":1617535671690,"results":"17","hashOfConfig":"15"},{"size":1908,"mtime":1617798099983,"results":"18","hashOfConfig":"15"},{"size":3098,"mtime":1617778885186,"results":"19","hashOfConfig":"15"},{"size":375,"mtime":1612951394620,"results":"20","hashOfConfig":"15"},{"size":1534,"mtime":1616538966394,"results":"21","hashOfConfig":"15"},{"size":1442,"mtime":1617192745196,"results":"22","hashOfConfig":"15"},{"size":1504,"mtime":1614009018182,"results":"23","hashOfConfig":"15"},{"size":394,"mtime":1613927234495,"results":"24","hashOfConfig":"15"},{"size":1164,"mtime":1615468410864,"results":"25","hashOfConfig":"15"},{"size":728,"mtime":1615468410981,"results":"26","hashOfConfig":"15"},{"size":1652,"mtime":1617798731707,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"z3sqh",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Admin\\Documents\\dd\\src\\screens\\question\\question.js",[],"C:\\Users\\Admin\\Documents\\dd\\src\\screens\\jobCard\\jobCard.style.js",[],"C:\\Users\\Admin\\Documents\\dd\\src\\screens\\jobs\\jobs.js",["56"],"import React, { useEffect, useState } from \"react\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport useStyles from './jobs.style'\r\nimport JobCard from \"../jobCard/jobCard\"\r\nimport Header from \"../../components/header/header\"\r\nimport Footer from \"../../components/footer/footer\"\r\nimport axios from 'axios';\r\nconst Jobs = () => {\r\n    const classes = useStyles();\r\n    let { params } = useRouteMatch();\r\n    console.log(params);\r\n    const [jobsBySection, setJobsBySection] = useState([])\r\n    const GetJobsFromDB = async () => {\r\n       // console.log(\"http://localhost:8081/josor/jobs.php?skill_id ${}\");\r\n        const response = await axios.get(\"http://localhost/test/jobs.php?skill_id=\"+params.id);\r\n       console.log(response.data);\r\n        if(response.data.length>0)\r\n        setJobsBySection(response.data);\r\n    }\r\n    useEffect(() => {\r\n        GetJobsFromDB();\r\n    }, []);\r\n    // console.log(params); //for testing\r\n    // console.log(newJob);\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <div className={classes.container}>\r\n                {/* <p>id: {params.id}</p> */}\r\n                {jobsBySection.map((job) => {\r\n                    return (\r\n                        <JobCard job={job} />\r\n                    )\r\n                })}\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\nexport default Jobs;","C:\\Users\\Admin\\Documents\\dd\\src\\screens\\Home\\Home.js",["57"],"C:\\Users\\Admin\\Documents\\dd\\src\\screens\\signUp\\signUp.js",["58"],"import React from \"react\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport useStyles from \"./sign.style\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Resume from \"../../img/resume.svg\";\r\nimport clsx from 'clsx';\r\nimport axios from 'axios';\r\n\r\nconst SingUp = () => {\r\n    const [data, setData] = React.useState({\r\n        id:\"\",\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n    \r\n       \r\n    })\r\n    const handleChange = (event) => {\r\n        console.log(event);\r\n        setData({ ...data, [event.target.name]: event.target.value })\r\n    };\r\n    const insertUser = async () => {\r\n        console.log('test');\r\n        console.log(data);\r\n        const user = {\r\n            id: data.id,\r\n            name: data.username,\r\n            email: data.email,\r\n            password: data.password,\r\n            phone:13444,\r\n            userTypeid:1\r\n        };\r\n        const response = await axios.post(\r\n            'http://localhost/test/Users.php',\r\n            user,\r\n            { headers: { 'Content-Type': 'application/json' } }\r\n        )\r\n        console.log(response.data)\r\n    };\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    return (\r\n        <div className={classes.page}>\r\n            <div className={classes.container2}>\r\n                <img src={Resume} width=\"60%\" alt=\"resume\" />\r\n            </div>\r\n            <div className={classes.container1}>\r\n                <div className={classes.container}>\r\n                    <div className={classes.colored}>\r\n                        <div className={classes.test}>\r\n                            <h1 className={classes.titleColor}>Sign Up</h1>\r\n                            <div className={classes.textFields}>\r\n                                <TextField required id=\"outlined-basic\" label=\"UserName\" variant=\"outlined\" value={data.username} name=\"username\" onChange={handleChange} />\r\n                                <TextField required id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" value={data.email} onChange={handleChange} name=\"email\" onChange={handleChange} />\r\n                                <TextField required id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" type=\"password\" value={data.password} name=\"password\" onChange={handleChange} />\r\n                                <TextField required id=\"outlined-basic\" label=\"confirm password\" variant=\"outlined\" type=\"password\" value={data.confirmPassword} name=\"confirmPassword\" onChange={handleChange} />\r\n                                <Button className={clsx(classes.submet, classes.btnColor)} variant=\"contained\" onClick={insertUser}>SIGN UP</Button>\r\n                                <Button className={classes.submet} variant=\"text\" color=\"primary\" aria-label=\"text primary button group\" onClick={() => { history.push(\"/\") }}> Have an account login</Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default SingUp;\r\n\r\n\r\n","C:\\Users\\Admin\\Documents\\dd\\src\\reportWebVitals.js",[],"C:\\Users\\Admin\\Documents\\dd\\src\\screens\\newJob\\newjob.style.js",[],"C:\\Users\\Admin\\Documents\\dd\\src\\screens\\HireMe\\HireMe.style.js",[],"C:\\Users\\Admin\\Documents\\dd\\src\\components\\footer\\footer.js",["59"],"C:\\Users\\Admin\\Documents\\dd\\src\\components\\jobPost\\JobSection.js",[],"C:\\Users\\Admin\\Documents\\dd\\src\\components\\header\\header.style.js",[],"C:\\Users\\Admin\\Documents\\dd\\src\\components\\newService\\newService.style.js",[],"C:\\Users\\Admin\\Documents\\dd\\src\\components\\header\\header.js",["60","61"],{"ruleId":"62","severity":1,"message":"63","line":22,"column":8,"nodeType":"64","endLine":22,"endColumn":10,"suggestions":"65"},{"ruleId":"66","severity":1,"message":"67","line":38,"column":11,"nodeType":"68","messageId":"69","endLine":38,"endColumn":21},{"ruleId":"70","severity":1,"message":"71","line":55,"column":162,"nodeType":"72","endLine":55,"endColumn":185},{"ruleId":"66","severity":1,"message":"73","line":4,"column":8,"nodeType":"68","messageId":"69","endLine":4,"endColumn":24},{"ruleId":"74","severity":1,"message":"75","line":23,"column":25,"nodeType":"76","endLine":23,"endColumn":61},{"ruleId":"74","severity":1,"message":"75","line":24,"column":25,"nodeType":"76","endLine":24,"endColumn":61},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'GetJobsFromDB'. Either include it or remove the dependency array.","ArrayExpression",["77"],"no-unused-vars","'clearLogin' is assigned a value but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'TextareaAutosize' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",{"desc":"78","fix":"79"},"Update the dependencies array to be: [GetJobsFromDB]",{"range":"80","text":"81"},[891,893],"[GetJobsFromDB]"]